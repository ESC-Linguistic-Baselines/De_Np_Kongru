# Datensatz laden
en_fr_data <- read.csv( file = "batch_evaluation_np.csv")
# DataFrames pro Niveaustufe aufstellen
beginner <- en_fr_data[
en_fr_data$general_cefr=="A1" |
en_fr_data$general_cefr=="A2",
]
# Datensatz laden
en_fr_data <- read.csv( file = "batch_evaluation_np.csv")
# Das lokale Verzeichnis festlegen
setwd("/Users/christopherchandler/repo/Python/computerlinguistik/de_np_kongru/user/outgoing/batch_results")
install.packages("readxl")
install.packages("writexl")
library("readxl")
library("writexl")
# Datensatz laden
en_fr_data <- read.csv( file = "batch_evaluation_np.csv")
# DataFrames pro Niveaustufe aufstellen
beginner <- en_fr_data[
en_fr_data$general_cefr=="A1" |
en_fr_data$general_cefr=="A2",
]
intermediate <- en_fr_data[
en_fr_data$general_cefr=="B1" |
en_fr_data$general_cefr=="B2",
]
advanced <- en_fr_data[
en_fr_data$general_cefr=="C1",
]
beginner_sorted <- beginner[order(beginner$general_cefr,
beginner$general_mother_tongue), ]
new_data <- data.frame(
general_author_id = beginner_sorted$general_author_id,
general_mother_tongue = beginner$general_mother_tongue,
general_cefr=beginner$general_cefr,
ART = beginner_sorted$ART,
txt_len_in_char = beginner_sorted$txt_len_in_char,
EINFACH = beginner_sorted$EINFACH,
PREP = beginner_sorted$PREP,
EIGENNAMEN = beginner_sorted$EIGENNAMEN,
REDEWENDUNGEN = beginner_sorted$REDEWENDUNGEN,
EINFACH_NICHT = beginner_sorted$EINFACH_NICHT,
ART_NICHT = beginner_sorted$ART_NICHT,
PREP_NICHT = beginner_sorted$PREP_NICHT,
GESAMT_UNBEKANNT = beginner_sorted$GESAMT_UNBEKANNT,
GESAMT_WAHR = beginner_sorted$GESAMT_WAHR,
GESAMT_FALSCH = beginner_sorted$GESAMT_FALSCH
)
new_data_order <- new_data[order(new_data$general_mother_tongue),]
# Ergebnisse Speichern
write_xlsx(new_data,"beginner_results.csv")
# Ergebnisse Speichern
write_xlsx(new_data,"beginner_results.xlsx")
# Ergebnisse Speichern
sheets <- list (
Sheet1 = new_data,
Sheet2 = new_data
)
write_xlsx(sheets,"beginner_results.xlsx")
# Ergebnisse Speichern
sheets <- list (
beginner_sheet = new_data,
Sheet2 = new_data
)
write_xlsx(sheets,"beginner_results.xlsx")
# Ergebnisse Speichern
sheets <- list (
beginner_sheet = new_data,
intermediate_sheet=new_data,
advanced_sheet = new_data
)
write_xlsx(sheets,"beginner_results.xlsx")
# +--------------------+-------------------------------------+
# | Arten              | Beispiel                            |
# +--------------------+-------------------------------------+
# | EINFACH            | Stadt                               |
# | ART                | Das Leben                           |
# | PREP               | Mit Kindern                         |
# | Rechtschreibfehler | Reche Pfliche*,Wiviel*              |
# | Eigennamen         | Katharina,Maria Meier               |
# | Redewendungen      | Liebe Julia,Mit freundlichen GrÃ¼ÃŸen |
# +--------------------+-------------------------------------+
#
# # Kongruenz
# Gruende, weswegen die Nominalphrase kongruiert
# +------+---------------------+
# | Code | Meaning             |
# +------+---------------------+
#  | 0   | EINFACH        |
# | 1    | ART                 |
# | 2    | PREP                |
# |3   | Eigennamen |
# | 4   | Redewendung bzw. gaengiger Satz           |
# +------+---------------------+
#
# # Nicht Kongruenz
#  Gruende, weswegen die Nominalphrase nicht kongruiert
# +------+-----------------------+
# | Code | Meaning               |
# +------+-----------------------+
#  | 10   | EINFACH        |
# | 11   | ART                   |
# | 12   | PREP                  |
# | 99   | Unbekannt             |
# +------+-----------------------+
#
#  # Unbekannt
# 99 - Aus unbekannten Gruenden konnte die Kongruenz nicht bestimmt werden.
# Es ist vermutlich irgendwo ein Fehler aufgetreten. Es kann auch sein
# das kein Kongruenz-Code zutreffend ist.
# Pakete installiert, wenn notwendig.
#install.packages("readxl")
#install.packages("writexl")
# Das lokale Verzeichnis festlegen, worin die Hauptergebnis-Datei gespeichert ist.
setwd("/Users/christopherchandler/repo/Python/computerlinguistik/de_np_kongru/user/outgoing/batch_results")
# Pakete
library("readxl")
library("writexl")
# Datensatz laden
en_fr_data <- read.csv( file = "batch_evaluation_np.csv")
#View(en_fr_data)
# DataFrames pro Niveaustufe aufstellen
beginner <- en_fr_data[
en_fr_data$general_cefr=="A1" |
en_fr_data$general_cefr=="A2",
]
intermediate <- en_fr_data[
en_fr_data$general_cefr=="B1" |
en_fr_data$general_cefr=="B2",
]
advanced <- en_fr_data[
en_fr_data$general_cefr=="C1",
]
beginner_sorted <- beginner[order(beginner$general_cefr,
beginner$general_mother_tongue), ]
new_data <- data.frame(
general_author_id = beginner_sorted$general_author_id,
general_mother_tongue = beginner$general_mother_tongue,
general_cefr=beginner$general_cefr,
ART = beginner_sorted$ART,
txt_len_in_char = beginner_sorted$txt_len_in_char,
EINFACH = beginner_sorted$EINFACH,
PREP = beginner_sorted$PREP,
EIGENNAMEN = beginner_sorted$EIGENNAMEN,
REDEWENDUNGEN = beginner_sorted$REDEWENDUNGEN,
EINFACH_NICHT = beginner_sorted$EINFACH_NICHT,
ART_NICHT = beginner_sorted$ART_NICHT,
PREP_NICHT = beginner_sorted$PREP_NICHT,
GESAMT_UNBEKANNT = beginner_sorted$GESAMT_UNBEKANNT,
GESAMT_WAHR = beginner_sorted$GESAMT_WAHR,
GESAMT_FALSCH = beginner_sorted$GESAMT_FALSCH
)
new_data_order <- new_data[order(new_data$general_mother_tongue),]
# Ergebnisse speichern
sheets <- list (
beginner_sheet = new_data,
intermediate_sheet=new_data,
advanced_sheet = new_data
)
write_xlsx(sheets,"nominal_congruence_results.xlsx")
# Ergebnisse speichern
# Create or prepare your data
data1 <- data.frame(
Name = c("John", "Jane", "Bob"),
Age = c(30, 25, 35),
Score = c(85, 92, 78)
)
data2 <- data.frame(
Name = c("Alice", "Eve", "Charlie"),
Age = c(28, 31, 29),
Score = c(90, 88, 76)
)
# Create a custom cell_styles object to specify starting row and column for each table
cell_styles <- list(
data.frame(
sheet = "Sheet1",
row = 3,  # Starting row for data1
col = 2   # Starting column for data1
),
data.frame(
sheet = "Sheet1",
row = 10,  # Starting row for data2
col = 2    # Starting column for data2
)
)
# Create a workbook
wb <- createWorkbook()
# Add a worksheet
addWorksheet(wb, "Sheet1")
# Write data1 to the specified location
writeData(wb, sheet = "Sheet1", x = data1, startRow = cell_styles[[1]]$row, startCol = cell_styles[[1]]$col)
# Write data1 to the specified location
writeData(wb, sheet = "Sheet1", x = data1, startRow = cell_styles[[1]]$row, startCol = cell_styles[[1]]$col)
# Write data1 to the specified location
writeData(wb, sheet = "Sheet1", x = data1, startRow = cell_styles[[1]]$row, startCol = cell_styles[[1]]$col)
# Write data1 to the specified location
writeData(wb, sheet = "Sheet1", x = data1, startRow = cell_styles[[1]]$row, startCol = cell_styles[[1]]$col)
# Write data1 to the specified location
writeData(wb, sheet = "Sheet1", x = data1, startRow = cell_styles[[1]]$row, startCol = cell_styles[[1]]$col)
# Das lokale Verzeichnis festlegen, worin die Hauptergebnis-Datei gespeichert ist.
setwd("/Users/christopherchandler/repo/Python/computerlinguistik/de_np_kongru/user/outgoing/batch_results")
# Pakete
library("readxl")
library("writexl")
# Datensatz laden
en_fr_data <- read.csv( file = "batch_evaluation_np.csv")
# DataFrames pro Niveaustufe aufstellen
beginner <- en_fr_data[
en_fr_data$general_cefr=="A1" |
en_fr_data$general_cefr=="A2",
]
intermediate <- en_fr_data[
en_fr_data$general_cefr=="B1" |
en_fr_data$general_cefr=="B2",
]
advanced <- en_fr_data[
en_fr_data$general_cefr=="C1",
]
beginner_sorted <- beginner[order(beginner$general_cefr,
beginner$general_mother_tongue), ]
new_data <- data.frame(
general_author_id = beginner_sorted$general_author_id,
general_mother_tongue = beginner$general_mother_tongue,
general_cefr=beginner$general_cefr,
ART = beginner_sorted$ART,
txt_len_in_char = beginner_sorted$txt_len_in_char,
EINFACH = beginner_sorted$EINFACH,
PREP = beginner_sorted$PREP,
EIGENNAMEN = beginner_sorted$EIGENNAMEN,
REDEWENDUNGEN = beginner_sorted$REDEWENDUNGEN,
EINFACH_NICHT = beginner_sorted$EINFACH_NICHT,
ART_NICHT = beginner_sorted$ART_NICHT,
PREP_NICHT = beginner_sorted$PREP_NICHT,
GESAMT_UNBEKANNT = beginner_sorted$GESAMT_UNBEKANNT,
GESAMT_WAHR = beginner_sorted$GESAMT_WAHR,
GESAMT_FALSCH = beginner_sorted$GESAMT_FALSCH
)
new_data_order <- new_data[order(new_data$general_mother_tongue),]
# Ergebnisse speichern
# Create or prepare your data
data1 <- data.frame(
Name = c("John", "Jane", "Bob"),
Age = c(30, 25, 35),
Score = c(85, 92, 78)
)
data2 <- data.frame(
Name = c("Alice", "Eve", "Charlie"),
Age = c(28, 31, 29),
Score = c(90, 88, 76)
)
# Create a custom cell_styles object to specify starting row and column for each table
cell_styles <- list(
data.frame(
sheet = "Sheet1",
row = 3,  # Starting row for data1
col = 2   # Starting column for data1
),
data.frame(
sheet = "Sheet1",
row = 10,  # Starting row for data2
col = 2    # Starting column for data2
)
)
# Create a workbook
wb <- createWorkbook()
# Add a worksheet
addWorksheet(wb, "Sheet1")
library(openxlsx)
install.packages("openxlsk")
library(openxlsx)
install.packages("openxlsx")
library(openxlsx)
library(openxlsx)
# Create or prepare your data
data1 <- data.frame(
Name = c("John", "Jane", "Bob"),
Age = c(30, 25, 35),
Score = c(85, 92, 78)
)
data2 <- data.frame(
Name = c("Alice", "Eve", "Charlie"),
Age = c(28, 31, 29),
Score = c(90, 88, 76)
)
# Create a new Excel workbook
wb <- createWorkbook()
# Add a worksheet
addWorksheet(wb, "Sheet1")
# Write data1 to the sheet starting at row 3, column 2
writeData(wb, sheet = "Sheet1", x = data1, startRow = 3, startCol = 2)
# Write data2 to the sheet starting at row 10, column 2
writeData(wb, sheet = "Sheet1", x = data2, startRow = 10, startCol = 2)
# Save the workbook to a file
saveWorkbook(wb, file = "output.xlsx")
# Close the workbook
close(wb)
# Create a new Excel workbook
wb <- createWorkbook()
# Add a worksheet
addWorksheet(wb, "Sheet1")
# Write data1 to the sheet starting at row 3, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 3, startCol = 2)
# Write data2 to the sheet starting at row 10, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 10, startCol = 2)
# Save the workbook to a file
saveWorkbook(wb, file = "output.xlsx")
# Close the workbook
close(wb)
(
general_author_id = beginner_sorted$general_author_id,
(
general_author_id = beginner_sorted$general_author_id,
new_data_order <- new_data[order(new_data$general_mother_tongue),]
# Create a new Excel workbook
wb <- createWorkbook()
# Add a worksheet
addWorksheet(wb, "Sheet1")
# Write data1 to the sheet starting at row 3, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 3, startCol = 2)
# Write data2 to the sheet starting at row 10, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 10, startCol = 2)
# Save the workbook to a file
saveWorkbook(wb, file = "output.xlsx")
# Close the workbook
close(wb)
# Write data1 to the sheet starting at row 3, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 0, startCol = 0)
# Write data2 to the sheet starting at row 10, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 20, startCol = 0)
# Save the workbook to a file
saveWorkbook(wb, file = "output.xlsx")
new_data_order <- new_data[order(new_data$general_mother_tongue),]
# Create a new Excel workbook
wb <- createWorkbook()
# Add a worksheet
addWorksheet(wb, "Sheet1")
# Write data1 to the sheet starting at row 3, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 0, startCol = 0)
# Write data2 to the sheet starting at row 10, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 20, startCol = 0)
# Save the workbook to a file
saveWorkbook(wb, file = "output.xlsx")
# Close the workbook
close(wb)
# Create a new Excel workbook
wb <- createWorkbook()
# Add a worksheet
addWorksheet(wb, "Sheet1")
# Write data1 to the sheet starting at row 3, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 0, startCol = 0)
# Write data2 to the sheet starting at row 10, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 20, startCol = 0)
# Save the workbook to a file
saveWorkbook(wb, file = "output.xlsx")
# Close the workbook
close(wb)
# Add a worksheet
addWorksheet(wb, "Sheet1")
# Write data1 to the sheet starting at row 3, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 0, startCol = 1)
# Write data2 to the sheet starting at row 10, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 20, startCol = 1)
# Save the workbook to a file
saveWorkbook(wb, file = "output.xlsx")
# Close the workbook
close(wb)
# Create a new Excel workbook
wb <- createWorkbook()
# Add a worksheet
addWorksheet(wb, "Sheet1")
# Write data1 to the sheet starting at row 3, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 0, startCol = 1)
# Write data2 to the sheet starting at row 10, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 20, startCol = 1)
# Save the workbook to a file
saveWorkbook(wb, file = "output.xlsx")
# Create a new Excel workbook
wb <- createWorkbook()
# Add a worksheet
addWorksheet(wb, "Sheet1")
# Write data1 to the sheet starting at row 3, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 1, startCol = 1)
# Write data2 to the sheet starting at row 10, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 20, startCol = 1)
# Save the workbook to a file
saveWorkbook(wb, file = "output.xlsx")
# Close the workbook
close(wb)
# Write data1 to the sheet starting at row 3, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 1, startCol = 1)
# Write data2 to the sheet starting at row 10, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = length(new_data)+1, startCol = 1)
# Save the workbook to a file
saveWorkbook(wb, file = "output.xlsx")
# Close the workbook
close(wb)
# Libraries bzw. R-Pakete
library(openxlsx)
# Libraries bzw. R-Pakete
library(openxlsx)
library("readxl")
library("writexl")
# Das lokale Verzeichnis festlegen, worin die Hauptergebnis-Datei gespeichert ist.
setwd("/Users/christopherchandler/repo/Python/computerlinguistik/de_np_kongru/user/outgoing/batch_results")
# Datensatz laden
en_fr_data <- read.csv( file = "batch_evaluation_np.csv")
# Datensatz laden
en_fr_data <- read.csv( file = "batch_evaluation_np.csv")
# +--------------------+-------------------------------------+
# | Arten              | Beispiel                            |
# +--------------------+-------------------------------------+
# | EINFACH            | Stadt                               |
# | ART                | Das Leben                           |
# | PREP               | Mit Kindern                         |
# | Rechtschreibfehler | Reche Pfliche*,Wiviel*              |
# | Eigennamen         | Katharina,Maria Meier               |
# | Redewendungen      | Liebe Julia,Mit freundlichen GrÃ¼ÃŸen |
# +--------------------+-------------------------------------+
#
# # Kongruenz
# Gruende, weswegen die Nominalphrase kongruiert
# +------+---------------------+
# | Code | Meaning             |
# +------+---------------------+
#  | 0   | EINFACH        |
# | 1    | ART                 |
# | 2    | PREP                |
# |3   | Eigennamen |
# | 4   | Redewendung bzw. gaengiger Satz           |
# +------+---------------------+
#
# # Nicht Kongruenz
#  Gruende, weswegen die Nominalphrase nicht kongruiert
# +------+-----------------------+
# | Code | Meaning               |
# +------+-----------------------+
#  | 10   | EINFACH        |
# | 11   | ART                   |
# | 12   | PREP                  |
# | 99   | Unbekannt             |
# +------+-----------------------+
#
#  # Unbekannt
# 99 - Aus unbekannten Gruenden konnte die Kongruenz nicht bestimmt werden.
# Es ist vermutlich irgendwo ein Fehler aufgetreten. Es kann auch sein
# das kein Kongruenz-Code zutreffend ist.
# Pakete installiert, wenn notwendig.
#install.packages("readxl")
#install.packages("writexl")
# install.packages("openxlsk")
# Libraries bzw. R-Pakete
library(openxlsx)
library("readxl")
library("writexl")
# Das lokale Verzeichnis festlegen, worin die Hauptergebnis-Datei gespeichert ist.
setwd("/Users/christopherchandler/repo/Python/computerlinguistik/de_np_kongru/user/outgoing/batch_results")
# Datensatz laden
en_fr_data <- read.csv( file = "batch_evaluation_np.csv")
#View(en_fr_data)
# DataFrames pro Niveaustufe aufstellen
beginner <- en_fr_data[
en_fr_data$general_cefr=="A1" |
en_fr_data$general_cefr=="A2",
]
intermediate <- en_fr_data[
en_fr_data$general_cefr=="B1" |
en_fr_data$general_cefr=="B2",
]
advanced <- en_fr_data[
en_fr_data$general_cefr=="C1",
]
beginner_sorted <- beginner[order(beginner$general_cefr,
beginner$general_mother_tongue), ]
new_data <- data.frame(
general_author_id = beginner_sorted$general_author_id,
general_mother_tongue = beginner$general_mother_tongue,
general_cefr=beginner$general_cefr,
ART = beginner_sorted$ART,
txt_len_in_char = beginner_sorted$txt_len_in_char,
EINFACH = beginner_sorted$EINFACH,
PREP = beginner_sorted$PREP,
EIGENNAMEN = beginner_sorted$EIGENNAMEN,
REDEWENDUNGEN = beginner_sorted$REDEWENDUNGEN,
EINFACH_NICHT = beginner_sorted$EINFACH_NICHT,
ART_NICHT = beginner_sorted$ART_NICHT,
PREP_NICHT = beginner_sorted$PREP_NICHT,
GESAMT_UNBEKANNT = beginner_sorted$GESAMT_UNBEKANNT,
GESAMT_WAHR = beginner_sorted$GESAMT_WAHR,
GESAMT_FALSCH = beginner_sorted$GESAMT_FALSCH
)
new_data_order <- new_data[order(new_data$general_mother_tongue),]
# Ergebnisse speichern
# Create a new Excel workbook
wb <- createWorkbook()
# Add a worksheet
addWorksheet(wb, "Sheet1")
# Write data1 to the sheet starting at row 3, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = 1, startCol = 1)
# Write data2 to the sheet starting at row 10, column 2
writeData(wb, sheet = "Sheet1", x = new_data, startRow = length(new_data) , startCol = 1)
# Save the workbook to a file
saveWorkbook(wb, file = "output.xlsx")
# Close the workbook
close(wb)
# DataFrames pro Niveaustufe aufstellen
beginner <- en_fr_data[
en_fr_data$general_cefr=="A1" |
en_fr_data$general_cefr=="A2",
]
new_data
# Ergebnisse speichern
saveWorkbook(wb, file = "nominal_phrase_results.xlsx")
